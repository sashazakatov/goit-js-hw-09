{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAE9BC,EAAc,CAClBC,SAAS,GAGX,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAACH,WAAUC,UAEnBG,EAAO,CAACJ,WAAUC,S,GAEnBA,E,IAyBPP,EAAKc,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBACN,IAAMC,EAvBR,SAAqBF,GACnB,MAAO,CACLR,MAAOW,OAAOH,EAAMI,cAAcC,SAASb,MAAMc,OACjDC,KAAMJ,OAAOH,EAAMI,cAAcC,SAASE,KAAKD,OAC/CE,OAAQL,OAAOH,EAAMI,cAAcC,SAASG,OAAOF,O,CAmBpCG,CAAYT,IAf/B,SAAsBU,GACpB,I,IADqBC,EAADD,EAAClB,MAAOgB,EAARE,EAAQF,OAAQD,EAAhBG,EAAgBH,KAC5BK,EAAI,EAAGA,EAAIJ,EAAQI,GAAK,EAC9BtB,EAAcsB,EAAI,EAAGD,GACpBE,MAAK,SAAAC,G,IAAEvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAChBT,EAAAgC,OAAOC,QAAQ,uBAAwCC,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAAKJ,E,IAEnE8B,OAAM,SAAAJ,G,IAAEvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBT,EAAAgC,OAAOI,QAAQ,sBAAqCF,OAAf1B,EAAS,QAAY0B,OAANzB,EAAM,MAAKJ,E,IAEjEuB,GAASJ,C,CAOXa,CAAalB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('.form');\n\nconst congfNotify = {\n  useIcon: false,\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve ,reject)=>{\n    setTimeout(()=>{\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({position, delay});\n      } else {\n        reject({position, delay});\n      }\n    }, delay);\n  });\n}\n\nfunction getFormData(event){\n  return {\n    delay: Number(event.currentTarget.elements.delay.value),\n    step: Number(event.currentTarget.elements.step.value),\n    amount: Number(event.currentTarget.elements.amount.value),\n  };\n}\n\nfunction loopPromises({delay, amount, step}){\n  for(let i = 0; i < amount; i += 1){\n    createPromise(i + 1, delay)\n    .then(({position, delay})=>{\n      Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`, congfNotify)\n    })\n    .catch(({position, delay})=>{\n      Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`, congfNotify)\n    });\n    delay += step;\n  }\n}\n\nform.addEventListener('submit', (event)=>{\n  event.preventDefault();\n  const formData = getFormData(event);\n  loopPromises(formData);\n});"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$congfNotify","useIcon","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","event","preventDefault","formData","Number","currentTarget","elements","value","step","amount","$ce04d3a99e08e73b$var$getFormData","param1","delay1","i","then","param","Notify","success","concat","catch","failure","$ce04d3a99e08e73b$var$loopPromises"],"version":3,"file":"03-promises.274c8a04.js.map"}